generator client {
  provider = "prisma-client-js"
}

datasource mongo {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String      @id @default(auto()) @map("_id") @mongo.ObjectId
  email         String      @unique
  username      String      @unique
  name          String
  password      String
  phoneNumber   String
  department    String
  role          String
  permissions   String[]
  profilePicture String
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

model Staff {
  id        String   @id @default(auto()) @map("_id") @mongo.ObjectId
  name  String
  title String
  email     String   @unique
  phone     String
  profilePicture String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model News {
  id        String   @id @default(auto()) @map("_id") @mongo.ObjectId
  title     String   @unique
  date      DateTime
  description String
  imageUrl  String
  slug      String
  type      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Admissions {
  id                String   @id @default(auto()) @map("_id") @mongo.ObjectId
  firstname         String
  lastname          String
  email             String @unique
  Location          String
  parent1_FirstName String
  parent1_LastName  String
  parent2_FirstName String
  parent2_LastName  String
  year_of_entry     Int
  grade             Int
  status            String
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

model Sections {
  id          String          @id @default(auto()) @map("_id") @mongo.ObjectId
  name        String          @unique
  description String
  image       String?
  slogan      String
  overviewId  String          @map("overviewId")
  overview    SectionOverview @relation(fields: [overviewId], references: [id])
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
}

model SectionOverview {
  id        String     @id @default(auto()) @map("_id") @mongo.ObjectId
  intro     String
  overview  String
  sections  Sections[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Education {
  id          String   @id @default(auto()) @map("_id") @mongo.ObjectId
  programName String @unique
  overview    String
  curriculum  String
  image       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model LadingPage {
  id          String   @id @default(auto()) @map("_id") @mongo.ObjectId
  sections Json?
  mission     Json?
  coreValues  String[]
  valuesImage String?
  uniquenessTitle String
  uniqueness  Json[]
  numbers     Json
  footer      Json
  isActive    Boolean
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}


model AboutPage {
  id String   @id @default(auto()) @map("_id") @mongo.ObjectId
  title String
  sliderPhotos String[]
  whoWeAre Json
  welcomeNote Json
  sectionsBackgroundImageSrc String
  sections Json
  alumniSectionTitle String
  operationalCountriesTitle String
  operationalCountries String[]
  partnerUniversitiesTitle String
  partnerUniversities String[]
  achievementsTitle String
  achievements      String[]
  isActive    Boolean
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt 
}

model EducationPage {
  id String   @id @default(auto()) @map("_id") @mongo.ObjectId
  bannerImageUrl String?
  bannerTitle String?
  overviewTitle String?
  overviewDescription Json
  leanerProfile Json
  timeTable Json
  isActive    Boolean
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt 
}

model AdmissionPage {
  id String   @id @default(auto()) @map("_id") @mongo.ObjectId
  bannerImageUrl String?
  bannerTitle String?
  enrollementSection Json
  missionSection Json
  firstCharacterSection Json
  secondCharacterSection Json
  lastCharacterSection Json
  isActive    Boolean
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt 
}

model ContactPage {
  id String   @id @default(auto()) @map("_id") @mongo.ObjectId
  email String
  phoneNumber String
  location String
  workingDays Json
  isActive    Boolean
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt 
}

model Queries{
  id String   @id @default(auto()) @map("_id") @mongo.ObjectId
  name String
  email String
  message String
  isReplied Boolean
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt 
}

model LearnersLifePage {
  id String   @id @default(auto()) @map("_id") @mongo.ObjectId
  bannerImageUrl String?
  description String?
  isActive    Boolean
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt 
} 

model Numbers {
  id String   @id @default(auto()) @map("_id") @mongo.ObjectId
  sectionTitle String
  sectionSlug String @unique
  number Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt 
} 

model Gallery {
  id         String   @id @default(auto()) @map("_id") @mongo.ObjectId
  attachmentUrl String
  isPublic   Boolean @default(true)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}


model Event {
  id         String   @id @default(auto()) @map("_id") @mongo.ObjectId
  title      String
  description String
  date        String
  startTime   String
  endTime    String
  location    String
  coverPhotoUrl String?
  moreImages    String[]
  slug       String
  isPublic   Boolean @default(true)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Career {
  id         String   @id @default(auto()) @map("_id") @mongo.ObjectId
  title      String
  slug       String
  type       String
  isPublished Boolean @default(true)
  description String
  industry  String
  jobLevel    String
  experience  String
  deadline    DateTime
  salary      String
  isPublic      Boolean @default(true)
  publishDate  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}


model NavLinks {
  id String   @id @default(auto()) @map("_id") @mongo.ObjectId
  navbar Json?
  menu Json?
  footerLinks Json?
  footerAddresses Json?
  socials Json?
  isActive    Boolean
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt 
} 